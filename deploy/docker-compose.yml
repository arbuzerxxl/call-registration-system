version: "3.8"

volumes:
  rabbitmq_data:

services:

  backend:
    container_name: backend
    build: ../backend/
    restart: unless-stopped
    depends_on:
      - servicedb
    env_file:
      - ./../.env
    ports:
      - '8888:8888'
    networks:
      main:

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:management
    restart: unless-stopped
    environment:
        - RABBITMQ_DEFAULT_USER=rabbit
        - RABBITMQ_DEFAULT_PASS=mypassword
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
        # AMQP protocol port
        - '5672:5672'
        # HTTP management UI
        - '15672:15672'
    # expose:
    #   - 5672
    #   - 15672
    networks:
      main:

  servicedb:
    container_name: servicedb
    build: ../service_db/
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - ./../.env
    networks:
      main:

  db:
    container_name: postgresql_db
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=user_appeal
    volumes:
      - ../db:/var/lib/postgresql/data
    networks:
      main:
    ports:
      - "5433:5432"

networks:
  main: